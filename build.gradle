plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.eclipse.jkube.kubernetes' version '1.16.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', '2025.0.0')
    set('micrometerTracingVersion', '1.4.4')
    set('lombokVersion', '1.18.38')
    set('springdocVersion', '2.4.0')
    set('openTelemetryVersion', '1.44.1')
    set('oracleSpringBootVersion', '25.2.0')
    set('jkubeVersion', '1.16.2')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    
    // Oracle dependencies
    implementation "com.oracle.database.spring:oracle-spring-boot-starter-ucp:${oracleSpringBootVersion}"
    implementation "com.oracle.database.spring:oracle-spring-boot-starter-wallet:${oracleSpringBootVersion}"
    
    // Spring Boot Actuator for monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Spring Cloud dependencies
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    
    // Micrometer for metrics
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-tracing'
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
    
    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    
    // SpringDoc OpenAPI
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    
    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "io.micrometer:micrometer-tracing-bom:${micrometerTracingVersion}"
        mavenBom "io.opentelemetry:opentelemetry-bom:${openTelemetryVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// Disable layered jars for simpler JKube image builds
jar {
    enabled = false
    archiveClassifier = ''
}

bootJar {
    layered {
        enabled = false
    }
}

// JKube configuration
// The plugin will use defaults for most settings, with custom overrides below